"bazel-contrib/toolchains_emscripten/tests/rules_cc"
module(name = "toolchains_emscripten_integration_tests", version = "0.0.0", compatibility_level = 1)

bazel_dep(name = "rules_cc", version = "0.1.1")
git_override(
    module_name = "rules_cc",
    remote = "https://github.com/bazelbuild/rules_cc.git",
    commit = "794b5b0df5b991a87a703bd6950544fcc1651c24"
)

bazel_dep(name = "rules_foreign_cc", version = "0.14.0")
# TODO REMOVE THIS AFTER DEBUGGING
local_path_override(
    module_name = "rules_foreign_cc",
    path = "rules_foreign_cc/upstream"
)

bazel_dep(name = "aspect_bazel_lib", version = "2.10.0")
bazel_dep(name = "aspect_rules_js", version = "2.1.3")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "toolchains_emscripten", version = "0.0.0")
local_path_override(
    module_name = "toolchains_emscripten",
    path = ".."
)

# Declare a cache
emscripten_cache = use_extension(
    "@toolchains_emscripten//extensions:cache.bzl",
    "emscripten_cache"
)
emscripten_cache.declare(
    name = "emscripten_cache_pic",
    pic = True,
    targets = [
        "libstubs-debug",
        "libnoexit",
        "libc-debug",
        "libdlmalloc",
        "libcompiler_rt-wasm-sjlj",
        "libc++-except",
        "libc++abi-debug-except",
        "libunwind-except",
        "libsockets",
        "libcompiler_rt",
        "libc++-noexcept",
        "libc++abi-debug-noexcept",
    ]
)
use_repo(emscripten_cache, emscripten_cache_pic = "emscripten_cache_pic")

emscripten = use_extension("@toolchains_emscripten//extensions:emscripten.bzl", "emscripten")
emscripten.toolchain(
    version = "3.1.73",
    caches = [
        "@emscripten_cache_pic//:declaration.bzl"
    ]
)
use_repo(emscripten, emscripten_3_1_73 = "emscripten_3_1_73")
register_toolchains("@emscripten_3_1_73//:toolchain")
